# Prompts for LTI-ATS Design

1. **System Overview**:
   - Describe a next-generation ATS for LTI, focusing on efficiency, collaboration, automation, and AI assistance. Highlight competitive advantages over existing solutions like Greenhouse or Lever.
2. **Functionalities**:
   - List the basic functionalities of an ATS, prioritized from highest to lowest, with brief descriptions.
3. **Benefits**:
   - Explain benefits for candidates and recruiters, referencing industry benchmarks where possible.
4. **Alternatives**:
   - Identify alternatives to an ATS and their relevance for different organization sizes or scenarios.
5. **Customer Journey**:
   - Outline the step-by-step customer journey for an ATS client, including interactions and actors involved.
6. **User Roles**:
   - Define user roles (e.g., recruiter, hiring manager), their actions, and dependencies within the ATS.
7. **Data Model**:
   - Create a data model with entities, attributes (name and type), relationships, and a Mermaid ER diagram.
8. **System Design**:
   - Design a high-level system architecture, including components, integration patterns, and a Mermaid diagram. Ensure scalability, security, and maintainability.
9. **C4 Diagram**:
   - Provide a C4 diagram (context, container, component) for the AI Engine component, with Mermaid code.
10. **Lean Canvas**:
    - Develop a Lean Canvas for LTI-ATS, including problem, solution, customer segments, and other elements, with a Mermaid diagram.
11. **Use Cases**:
    - Describe three main use cases (job posting, candidate screening, interview scheduling) with sequence diagrams in Mermaid.
12. **Visual Representations**:
    - Include Mermaid code for all diagrams (data model, system design, C4, Lean Canvas, use cases) with textual descriptions of what each visual representation depicts to ensure clarity. Integrate provided images for ER diagram, Lean Canvas, Job Posting and Distribution, Candidate Screening and Ranking, Interview Scheduling and Feedback, System Design Diagram, Context Diagram, and Container Diagram alongside the corresponding Mermaid code.
13. **AI Attribution**:
    - Explicitly mention that the document is generated by Grok, created by xAI, at the top of the design document, including the current date and time (04:55 PM CST, Monday, July 07, 2025).

14. **User Stories Prompt 1**:
   - Based on the LTI-ATS PRD (LTI-MG.md), generate at least 2 user stories for key features (e.g., job posting, candidate screening) using the template: "As a [role], I want to [action] so that [benefit]" with acceptance criteria, priority, and estimated effort.
15. **User Stories Prompt 2**:
   - Using the LTI-ATS design document (LTI-MG.md), create a minimum of 2 user stories focusing on high-priority functionalities, structured with role, action, benefit, acceptance criteria, and priority, and include effort estimates in story points.
16. **Product Backlog Prompt 1**:
   - From the LTI-ATS PRD (LTI-MG.md), build a product backlog with user stories prioritized using the MoSCoW method, including rationales for prioritization based on the document's functionality and use case sections.
17. **Product Backlog Prompt 2**:
   - Analyze the LTI-MG.md document to create a prioritized product backlog using the MoSCoW methodology, incorporating user stories derived from use cases and functionalities, with explanations for each priority level.
18. **Work Tickets Prompt 1**:
   - Select one user story from the LTI-ATS backlog and break it into detailed work tickets with titles, descriptions, technical details (language, dependencies, API endpoints), acceptance criteria, and assignees.
19. **Work Tickets Prompt 2**:
   - Choose a high-priority user story from the LTI-ATS product backlog and generate technical work tickets including task titles, descriptions, technical specifications (e.g., programming language, integrations), and assigned roles.
20. **Effort Estimation Prompt**:
   - Estimate the effort for work tickets of a selected user story using the Fibonacci sequence in story points, explaining the methodology and reasoning behind the estimates.

## Prompt Evaluation
- **Best Prompt**: Prompt 15 (User Stories Prompt 2) and Prompt 17 (Product Backlog Prompt 2) provided the best results.  
- **Reasoning**:  
  - Prompt 15 was effective because it specifically targeted high-priority functionalities from the PRD, ensuring relevance to core features like candidate screening and job posting. The structured template with acceptance criteria and effort estimates aligned well with Agile best practices.  
  - Prompt 17 excelled by leveraging the detailed use case and functionality sections of LTI-MG.md, allowing for a comprehensive backlog with clear MoSCoW prioritization rationales. The focus on analyzing the document holistically improved the accuracy of priority assignments.  
  - Other prompts (e.g., Prompt 14, 16) were less specific or lacked the depth needed to fully utilize the PRD's content, leading to incomplete or generic outputs.  
